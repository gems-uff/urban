<%= render :partial => 'scripts' %>

<div class="page-header">
  <h1><%= t '.title', :default => "Positions Heat Map" %></h1>
</div>

<%= render :partial => 'filter' %>

<div class="row">
  <div id="map-canvas" style="height: 500px; width: 100%"></div>
</div>

<script>

    $("form").submit(function (e) {
        e.preventDefault();
        buildVariables();

        $.get('<%=with_line_stops_and_positions_api_v1_bus_positions_path%>', { line: line, dow: dow, date: date,
            time_end: time_end, time_begin: time_begin, diff: {dow: dow_diff, date: date_diff, time_end: time_end_diff,
                time_begin: time_begin_diff}, format: 'json'})
                .done(function (data) {
                    prepareMap(data);

                    for (var i = 0; i < stops.length; i++) {
                        addMarker(new google.maps.LatLng(stops[i]['latitude'], stops[i]['longitude']));
                    }

                    if ($('#diff').hasClass('active')) {
                        for (var i = 0; i < bus_positions.length - 1; i++) {
                            var color = "#ff4d4d"
                            var count = bus_positions[i][2];
                            if (count > 20) {
                                color = "#00cd00"
                            } else if (count > 5 && count < 20) {
                                color = "#ffff4d"
                            } else if (count > -5 && count < 5)
                                color = "#000000"
                            if (count < -5 && count > -15) {
                                color = "#ffc04d"
                            }

                            var fp = [new google.maps.LatLng(bus_positions[i][1], bus_positions[i][0]),
                                new google.maps.LatLng(bus_positions[i + 1][1], bus_positions[i + 1][0])]
                            var flightPath = new google.maps.Polyline({
                                path: fp,
                                strokeColor: color,
                                strokeOpacity: 1.0,
                                strokeWeight: 5
                            });
                            polylines.push(flightPath);
                            flightPath.setMap(map);
                            baseHeatmapPoints.push({location: new google.maps.LatLng(bus_positions[i][1],
                                    bus_positions[i][0]), weight: 1});
                        }
                        showPolylines();

                    } else {
                        for (var i = 0; i < positions.length; i++) {
                            addPolyline(positions[i]['latitude'], positions[i]['longitude']);
                        }
                        for (var i = 0; i < bus_positions.length; i++) {
                            baseHeatmapPoints.push({location: new google.maps.LatLng(bus_positions[i][1],
                                    bus_positions[i][0]), weight: 1});
                        }
                        showPolylines();
                        var pointArray = new google.maps.MVCArray(baseHeatmapPoints);

                        baseHeatmap = new google.maps.visualization.HeatmapLayer({
                            data: pointArray
                        });
                        baseHeatmap.setMap(map);
                    }

                    if ($('input[name="show_stops"]').bootstrapSwitch('state')) {
                        showMarkers(false);
                    } else {
                        clearMarkers();
                    }
                    line = null;
                });
    });

    window.onload = initializeHeatMap;

</script>